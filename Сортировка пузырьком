{
За каждый проход элементы последовательно сравниваются попарно и, 
если порядок в паре неверный, выполняется обмен элементов. 
Проходы по массиву повторяются N-1 раз или до тех пор, 
пока на очередном проходе не окажется, что обмены больше не нужны, 
что означает — массив отсортирован. 
При каждом проходе алгоритма по внутреннему циклу, 
очередной наибольший элемент массива ставится на своё место 
в конце массива рядом с предыдущим наибольшим элементом, 
а наименьший элемент перемещается на одну позицию к началу массива 
(«всплывает» до нужной позиции как пузырёк в воде, отсюда и название алгоритма). 
}
 
procedure sort(a: array of integer);
begin
  for var i:=0 to a.Length-2 do
    for var j:=i+1 to a.length-1 do
      if a[i]>a[j]
        then swap(a[i],a[j]);
end;
///////////код процедуры swap////////
procedure Swap(var a, b: integer);
  begin
    var c:=a;
    a:=b;
    b:=c;
  end;
///===== пример =====/////
##
var a := ArrRandom(10,1,100);
a.Println;
for var i:=0 to a.Length-2 do
    for var j:=i+1 to a.length-1 do
        if a[i]>a[j] then swap(a[i],a[j]);
a.Print;
